exp(-0.157)
log(1.05)
exp(-1.95)
frailty<- function(t){exp(-4.23 + (0.03*t))}
frailty(67)
frailty(77)
exp(0.03)
exp(0.032)
exp(0.037)
library(colorspace)
p<- choose_colorspace()
p<- choose_palette()
RColorBrewer::brewer.pal(paired)
RColorBrewer::brewer.pal("paired")
RColorBrewer::brewer.pal("paired", n = 14)
RColorBrewer::brewer.pal("Paired", n = 14)
RColorBrewer::brewer.pal("Paired", n = 12)
p<- choose_palette()
p
as.character(p)
p(1)
View(p)
p(3)
?p(3)
?choose_palette
p(7)
col2rgb(p(7))
col2rgb(as.vector(p(7)))
col2rgb(as.vector(p(7)), collapse = " ")
x<- p(7)
paste(as.vector(col2rgb(x)), collapse = " ")
as.vector(col2rgb(x))
col2rgb(x)
col2rgb(x)[,1]
lapply(col2rgb(x), function(i){
return i
lapply(col2rgb(x), FUN = function(i){
return i
lapply(col2rgb(x), FUN = function(i){
return(i)
})
lapply(col2rgb(x), FUN = function(i){
return(paste(i, collapse = " "))
})
x<- as.vector(col2rgb(x))
lapply(seq_along(x), FUN = function(i){
return(i)
})
lapply(seq_along(1:7), FUN = function(i){
return(x[,i])
})
lapply(seq_along(1:7), FUN = function(i){
return(x[,i])
x})
x
x<- p(7)
x
x<- col2rgb(x)
x
x
lapply(seq_along(1:7), FUN = function(i){
return(x[,i])
})
lapply(seq_along(1:7), FUN = function(i){
return(paste(x[,i], collapse = " "))
})
lapply(seq_along(1:7), FUN = function(i){
return(paste(x[,i], collapse = " "))
})%>%
unlist()
library(dplyr)
lapply(seq_along(1:7), FUN = function(i){
return(paste(x[,i], collapse = " "))
})%>%
unlist()
RColorBrewer::brewer.pal("Paired", n = 12)
x<- RColorBrewer::brewer.pal("Paired", n = 12)
x<- col2rgb(x)
lapply(seq_along(1:7), FUN = function(i){
return(paste(x[,i], collapse = " "))
})%>%
unlist()
x<- RColorBrewer::brewer.pal("Paired", n = 12)
x<- col2rgb(x)
x
lapply(seq_along(1:ncol(x)), FUN = function(i){
return(paste(x[,i], collapse = " "))
})%>%
unlist()
install.packages(c("AER", "ascii", "askpass", "bayestestR", "BH", "boot", "brew", "brio", "broom", "broom.helpers", "broom.mixed", "bslib", "callr", "checkmate", "classInt", "cli", "clock", "cluster", "coda", "codetools", "colorspace", "commonmark", "COMPoissonReg", "cowplot", "cpp11", "credentials", "crosstalk", "crul", "curl", "data.table", "datawizard", "DBI", "dbplyr", "deldir", "desc", "devEMF", "digest", "downlit", "dplyr", "DT", "e1071", "effectsize", "elevatr", "ellipse", "emmeans", "evaluate", "expm", "FactoClass", "FactoMineR", "fansi", "fastDummies", "flextable", "float", "fontawesome", "foreign", "fs", "future", "future.apply", "gap", "gap.datasets", "gargle", "gdata", "gdtools", "geojson", "geojsonio", "geometries", "gert", "GGally", "ggforce", "ggnewscale", "ggplot2", "ggraph", "ggrepel", "ggridges", "ggsci", "ggstats", "ggthemes", "gh", "glmmTMB", "globals", "glue", "googledrive", "googlesheets4", "gplots", "graphlayouts", "gt", "gtable", "gtExtras", "gtools", "gtsummary", "gutenbergr", "hardhat", "haven", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr", "httr2", "hunspell", "huxtable", "igraph", "insight", "jqr", "jsonlite", "jtools", "kableExtra", "KernSmooth", "knitr", "labeling", "labelled", "later", "lattice", "lava", "leafem", "leaflegend", "leaflet", "leaflet.extras2", "leaflet.providers", "lifecycle", "listenv", "lme4", "lubridate", "lwgeom", "magick", "maps", "marginaleffects", "markdown", "MASS", "Matrix", "MatrixExtra", "MatrixModels", "mgcv", "minqa", "monochromeR", "multcompView", "munsell", "mvtnorm", "naniar", "nlme", "norm", "officer", "openssl", "packrat", "paletteer", "pals", "parallelly", "parameters", "patchwork", "PDE", "performance", "pingr", "pkgbuild", "pkgload", "plotly", "plyr", "polyclip", "prettyunits", "pROC", "processx", "prodlim", "progress", "progressr", "promises", "protolite", "ps", "psych", "purrr", "qdapRegex", "qpdf", "quantreg", "R.oo", "R.utils", "ragg", "raster", "rayimage", "rayshader", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "reactR", "readr", "readxl", "recipes", "rematch", "remotes", "reprex", "reticulate", "rgl", "rJava", "rlang", "rmarkdown", "roxygen2", "rpart", "rprojroot", "rsconnect", "rsdmx", "rstudioapi", "rtweet", "rvest", "s2", "sandwich", "santoku", "sass", "scales", "seriation", "sf", "sfheaders", "shape", "shiny", "shinytest", "shinyWidgets", "snakecase", "sp", "spacyr", "spatial", "spatialreg", "spData", "spdep", "stars", "stringdist", "stringi", "stringr", "styler", "survey", "survival", "svglite", "sys", "systemfonts", "syuzhet", "terra", "testthat", "text2vec", "textshape", "textshaping", "tidygraph", "tidyr", "tidyselect", "tidytuesdayR", "tigris", "timechange", "timeDate", "tinytex", "TMB", "tvthemes", "tweenr", "units", "usethis", "utf8", "uuid", "V8", "vctrs", "vipor", "viridis", "vroom", "waldo", "webshot", "wesanderson", "withr", "wk", "word2vec", "writexl", "xfun", "XML", "xml2", "xts", "yaml", "zip"))
shiny::runApp('OneDrive - University of Edinburgh/SGSSS Work/Code/SGSSS_Network_Maps')
?reactiveValues
runApp('OneDrive - University of Edinburgh/SGSSS Work/Code/SGSSS_Network_Maps')
runApp('OneDrive - University of Edinburgh/SGSSS Work/Code/SGSSS_Network_Maps')
3!
factorial(3)
combination<- function(n, r){
factorial(n)/((factorial(n)*factorial(r)))
}
combination(10,1)
combination<- function(n, r){
factorial(n)/((factorial(r)*factorial(n-r)))
}
combination(10,1)
combination(10,2)
for (r = 1:23){
for (r in 1:23){
combination(23,r)
}
for (r in 1:23){
print(combination(23,r))
}
lapply(1:23, function(r){combination(23, r)})
lapply(1:23, function(r){combination(23, r)})%>%
unlist()
library(dplyr)
lapply(1:23, function(r){combination(23, r)})%>%
unlist()
lapply(1:23, function(r){combination(23, r)})%>%
unlist()%>%
sum()
lapply(1:6, function(r){combination(6, r)})%>%
unlist()%>%
sum()
lapply(1:6, function(r){combination(6, r)})%>%
unlist()%>%
sum()
lapply(1:6, function(r){combination(6, r)})
lapply(1:6, function(r){combination(6, r)})
lapply(1:6, function(r){combination(6, r)})%>%
unlist()%>%
sum()
lapply(1:6, function(r){combination(6, r)})%>%
unlist()%>%
sum()
shiny::runApp('OneDrive - University of Edinburgh/PhD/Article Library/Article Library Public')
